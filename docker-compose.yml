version: '3.4'

services:
  identity:
    build:
      context: .
      dockerfile: src/Identity/KnowYourCustomer.Identity/Dockerfile
    ports:
      - "5000:80"
    environment:
      - "ConnectionStrings:IdentityServerDb=Server=sqlserver;Database=KnowYourCustomer.IdentityDb;User Id=sa;Password=Pass_w0rd;Application Name=Kyc.Identity"
    depends_on:
      - sqlserver
    restart: on-failure

  kyc:
    image: ${DOCKER_REGISTRY-}kyc
    build:
      context: .
      dockerfile: src/Kyc/KnowYourCustomer.Kyc.Host/Dockerfile
    ports:
      - "5001:80"
    environment:
      - "IdentityServerUrl=http://identity"
      - "ConnectionStrings:KycDb=Server=sqlserver;Database=KnowYourCustomer.KycDb;User Id=sa;Password=Pass_w0rd;Application Name=Kyc.Host"
    depends_on:
      - identity
      - sqlserver
      - kafka
    restart: on-failure

  consumer:
    build:
      context: .
      dockerfile: src/Kyc/KnowYourCustomer.Kyc.Consumer/Dockerfile
    environment:
      - "IdentityServerUrl=http://identity"
      - "KycServiceUrl=http://kyc"
    depends_on:
      - kafka
    restart: on-failure

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    environment:
      - MSSQL_SA_PASSWORD=Pass_w0rd
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
    ports:
      - "1401:1433"
    container_name: sqlserver